name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  health_check:
    name: Health Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Perform Health Check
        run: |
          # Add your health check logic here
          echo "Performing health check..."
          # For example, you might ping your services or check database connectivity

  e2e_web:
    name: E2E (Web)
    needs: health_check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Web repository
        uses: actions/checkout@v3
        with:
          repository: Theerapat-dev/PresidentDemo-Web
          token: ${{ secrets.GH_PAT }}
          ref: ${{ github.event.inputs.web_branch || 'main' }}
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.20.2'
      - name: Install dependencies
        run: npm install --force
      - name: Start the app
        run: |
          npm start &
          npx wait-on http://localhost:4200
        env:
          PORT: 4200
      - name: Install Playwright
        run: npx playwright install
      - name: Run Playwright tests
        run: npx playwright test president/E2E-Script --output=results.json

  sonarqube_scan:
    name: SonarQube Scan
    needs: health_check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  dependabot:
    name: Dependabot
    needs: health_check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      # - name: Run Dependabot
      #   uses: dependabot/dependabot-core@v3
      #   with:
      #     github-token: ${{ secrets.GH_PAT }}

  zap:
    name: Zap
    needs: health_check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'http://localhost:4200'

  build_and_push:
    name: Build and Push Docker Image
    needs: [health_check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: lefisius/dockerbuild:latest

  trigger_jenkins:
        name: Trigger Jenkins Job
        runs-on: ubuntu-latest
        needs: health_check
        steps:
              - name: Trigger Jenkins Job
                run: |
                  curl -X POST "https://9569-61-7-146-25.ngrok-free.app/job/testpipe/build" \
                  --user "user:11b20d5f21817203f0fb4db12e13b2402e"

  get_commit_author_email:
            name: Get Commit Author Email
            runs-on: ubuntu-latest
            outputs:
              commit_author_email: ${{ steps.get_commit_info.outputs.commit_author_email }}
              changed_files: ${{ steps.get_commit_info.outputs.changed_files }}
            steps:
              - name: Checkout Code
                uses: actions/checkout@v3
                with:
                  fetch-depth: 2

              - name: Get Commit Info
                id: get_commit_info
                run: |
                  AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
                  CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | tr '\n' ' ')
                  echo "commit_author_email=${AUTHOR_EMAIL}" >> $GITHUB_ENV
                  echo "changed_files=${CHANGED_FILES}" >> $GITHUB_ENV

  send_failure_notification:
            name: Send Failure Notification
            runs-on: ubuntu-latest
            if: ${{ failure() }}
            steps:
              - name: Checkout Code
                uses: actions/checkout@v3
                with:
                  fetch-depth: 2

              - name: Download Error Files
                uses: actions/download-artifact@v3
                with:
                  name: error-files

              - name: Get Error Log and Commit Info
                id: error_info
                run: |
                  commit_author_email=$(git log -1 --pretty=format:'%ae')
                  changed_files=$(git diff --name-only HEAD~1 HEAD | tr '\n' ' ')

                  error_paths=$(grep -o '/.*error' build_errors.log | sed 's/:.*//' | sort -u | tr '\n' ' ' | sed 's/ $//')
                  echo "error_paths=$error_paths" >> $GITHUB_ENV

                  check_file_for_errors() {
                    local file=$1
                    grep -q "$file" build_errors.log
                    return $?
                  }

                  non_error_files=""

                  for file in $changed_files; do
                    if ! check_file_for_errors "$file"; then
                      non_error_files+="$file "
                    fi
                  done

                  echo "non_error_files=$non_error_files" >> $GITHUB_ENV
                  echo "changed_files_text=ไฟล์ที่มีการแก้ไข: $changed_files" >> $GITHUB_ENV
                  echo "commit_author_email=$commit_author_email" >> $GITHUB_ENV

              - name: Send email on failure
                uses: dawidd6/action-send-mail@v3
                with:
                  server_address: smtp.gmail.com
                  server_port: 587
                  username: ${{ secrets.GMAIL_USERNAME }}
                  password: ${{ secrets.GMAIL_APP_PASSWORD }}
                  subject: งาน ${{ github.job }} ของ ${{ github.repository }} ล้มเหลว
                  body: |
                    ข้อความ: งาน `build` ของ ${{ github.repository }} ล้มเหลว

                    รายละเอียดข้อผิดพลาดอยู่ในไฟล์แนบ

                    ไฟล์ที่มีข้อผิดพลาด :
                    ${{ env.error_paths }}

                    ไฟล์ที่แก้แล้ว complete: ${{ env.non_error_files }}

                    ${{ env.changed_files_text }}
                  to: ${{ env.commit_author_email }}
                  from: ${{ secrets.GMAIL_USERNAME }}
                  attachments: build_errors.log

  send_success_notification:
            name: Send Success Notification
            runs-on: ubuntu-latest
            if: ${{ success() }}
            steps:
              - name: Checkout Code
                uses: actions/checkout@v3
                with:
                  fetch-depth: 2

              - name: Get Commit Info
                id: commit_info
                run: |
                  commit_author_email=$(git log -1 --pretty=format:'%ae')
                  changed_files=$(git diff --name-only HEAD~1 HEAD | tr '\n' ' ')
                  echo "commit_author_email=${commit_author_email}" >> $GITHUB_ENV
                  echo "changed_files=${changed_files}" >> $GITHUB_ENV

              - name: Send email on success
                uses: dawidd6/action-send-mail@v3
                with:
                  server_address: smtp.gmail.com
                  server_port: 587
                  username: ${{ secrets.GMAIL_USERNAME }}
                  password: ${{ secrets.GMAIL_APP_PASSWORD }}
                  subject: งาน ${{ github.job }} ของ ${{ github.repository }} สำเร็จ
                  body: |
                    ข้อความ: งาน `build` ของ ${{ github.repository }} สำเร็จ

                    ไฟล์ที่มีการแก้ไข: ${{ env.changed_files }}

                    ขอบคุณที่รอดำเนินการให้เสร็จสิ้น
                  to: ${{ env.commit_author_email }}
                  from: ${{ secrets.GMAIL_USERNAME }}
