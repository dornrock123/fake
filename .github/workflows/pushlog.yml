name: CI with Docker, Jenkins, and Notifications

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Super-Linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build Project
        id: build
        run: |
          ng build 2> build_errors.log
          exit_code=$?
          echo "error_files_present=$([[ $exit_code -ne 0 ]])" >> $GITHUB_OUTPUT

      - name: Upload Error Files
        if: ${{ steps.build.outputs.error_files_present == 'true' || always()}}
        uses: actions/upload-artifact@v3
        with:
          name: error-files
          path: build_errors.log

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: build

    steps:

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: krisneonploy/dockerbuild

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trigger_jenkins_job:
    name: Trigger Jenkins Job
    runs-on: ubuntu-latest
    needs: push_to_registry

    steps:
      - name: Trigger Jenkins Job
        run: |
          curl -X POST "https://2c7e-61-7-146-25.ngrok-free.app/job/dornny/build" \
          --user "dornrock:1147d17fc8ec8e23ed131270370d186bf6"

  send_failure_notification:
    name: Send Failure Notification
    runs-on: ubuntu-latest
    needs: build
    if: ${{ failure() }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Download Error Files
        uses: actions/download-artifact@v3
        with:
          name: error-files

      - name: Get Error Log and Commit Info
        id: error_info
        run: |
          commit_author_email=$(git log -1 --pretty=format:'%ae')
          changed_files=$(git diff --name-only HEAD~1 HEAD | tr '\n' ' ')

          error_paths=$(grep -o '/.*error' build_errors.log | sed 's/:.*//' | sort -u | tr '\n' ' ' | sed 's/ $//')
          echo "error_paths=$error_paths" >> $GITHUB_OUTPUT

          check_file_for_errors() {
            local file=$1
            grep -q "$file" build_errors.log
            return $?
          }

          non_error_files=""
          for file in $changed_files; do
            if ! check_file_for_errors "$file"; then
              non_error_files+="$file "
            fi
          done

          echo "ค่าของ non_error_files: '$non_error_files'"

          if [ -n "$non_error_files" ]; then
            echo "non_error_files=$non_error_files" >> $GITHUB_OUTPUT
          else
            echo "non_error_files=ไม่มีไฟล์ที่ไม่มีข้อผิดพลาด" >> $GITHUB_OUTPUT
          fi

          changed_files_text="ไฟล์ที่มีการแก้ไข: $changed_files"

          echo "changed_files_text=$changed_files_text" >> $GITHUB_OUTPUT
          echo "commit_author_email=$commit_author_email" >> $GITHUB_OUTPUT

      - name: Send email on failure
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: งาน ${{ github.job }} ของ ${{ github.repository }} ล้มเหลว
          body: |
            ข้อความ: งาน `build` ของ ${{ github.repository }} ล้มเหลว

            รายละเอียดข้อผิดพลาดอยู่ในไฟล์แนบ

            ไฟล์ที่มีข้อผิดพลาด:
            ${{ steps.error_info.outputs.error_paths }}

            ไฟล์ที่แก้แล้ว complete: ${{ steps.error_info.outputs.non_error_files }}

            ${{ steps.error_info.outputs.changed_files_text }}
          to: ${{ steps.error_info.outputs.commit_author_email }}
          from: ${{ secrets.GMAIL_USERNAME }}
          attachments: build_errors.log

  send_success_notification:
    name: Send Success Notification
    runs-on: ubuntu-latest
    needs: [lint, build, push_to_registry]
    if: ${{ always() }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get Commit Info
        id: commit_info
        run: |
          commit_author_email=$(git log -1 --pretty=format:'%ae')
          changed_files=$(git diff --name-only HEAD~1 HEAD | tr '\n' ' ')
          echo "commit_author_email=$commit_author_email" >> $GITHUB_OUTPUT
          echo "changed_files=$changed_files" >> $GITHUB_OUTPUT

      - name: Send email on success
        if: ${{ needs.build.result == 'success' }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: งาน ${{ github.job }} ของ ${{ github.repository }} สำเร็จ
          body: |
            งาน `build` ของ ${{ github.repository }} สำเร็จ
            commit successssssssssssss
            ไฟล์ที่ถูก commit และ push คือ:
            ${{ steps.commit_info.outputs.changed_files }}
          to: ${{ steps.commit_info.outputs.commit_author_email }}
          from: ${{ secrets.GMAIL_USERNAME }}
