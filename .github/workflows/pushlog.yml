name: CI Pipeline

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dependabot:
    name: Dependabot Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Dependabot Configuration
        run: |
          echo "version: 2" > .github/dependabot.yml
          echo "updates:" >> .github/dependabot.yml
          echo "  - package-ecosystem: \"npm\"" >> .github/dependabot.yml
          echo "    directory: \"/\"" >> .github/dependabot.yml
          echo "    schedule:" >> .github/dependabot.yml
          echo "      interval: \"monthly\"" >> .github/dependabot.yml
          echo "    open-pull-requests-limit: 10" >> .github/dependabot.yml
          echo "Dependabot configuration created"
        shell: bash
        continue-on-error: true

  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    needs: dependabot
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.20.2"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run lint
        run: npm run lint

      - name: Upload lint results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: lint-results
          path: lint-results.json

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.20.2"

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build Project
        id: build
        run: |
          npm run build 2> build_errors.log || true
          exit_code=$?
          echo "error_files_present=$([[ $exit_code -ne 0 ]])" >> $GITHUB_ENV
          exit $exit_code

      - name: Upload Error Files
        if: ${{ env.error_files_present == 'true' || always() }}
        uses: actions/upload-artifact@v3
        with:
          name: error-files
          path: build_errors.log

  run-web-and-test:
    name: Run Web and Playwright Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.20.2"

      - name: Set npm registry
        run: npm config set registry https://registry.npmjs.org/

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Start the app
        run: |
          npm start &
          npx wait-on http://localhost:4200
        env:
          PORT: 4200

      - name: Install Playwright
        run: npx playwright install

      - name: Run Playwright tests
        run: npx playwright test

      - name: Create screenshots directory
        if: always()
        run: mkdir -p screenshots

      - name: Upload Screenshots
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-screenshots
          path: screenshots/failure.png

  ZAP_Full_Scan_Before:
    runs-on: ubuntu-latest
    needs: run-web-and-test
    name: ZAP_Full_Scan_Before
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: "ghcr.io/zaproxy/zaproxy:stable"
          target: "https://24d95ca73e89dfa76c417797f94624e1.serveo.net/" #ลิ้งของ pea แบบ public
          cmd_options: "-a"

      - name: Upload ZAP Scan Report
        uses: actions/upload-artifact@v3
        with:
          name: ZAP_Full_Scan_Before
          path: |
            report_json.json
            report_md.md
            report_html.html

  ZAP_API_Scan_Before:
    runs-on: ubuntu-latest
    needs: run-web-and-test
    name: ZAP_API_Scan_Before
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master

      - name: ZAP Scan
        uses: zaproxy/action-api-scan@v0.8.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: "ghcr.io/zaproxy/zaproxy:stable"
          format: openapi
          target: "https://24d95ca73e89dfa76c417797f94624e1.serveo.net/" #ลิ้งของ pea แบบ public
          cmd_options: "-a"

      - name: Upload ZAP Scan Report
        uses: actions/upload-artifact@v3
        with:
          name: ZAP_API_Scan_Before
          path: |
            report_json.json
            report_md.md
            report_html.html

  send_failure_notification:
    name: Send Failure Notification
    runs-on: ubuntu-latest
    needs:
      [
        dependabot,
        lint,
        build,
        run-web-and-test,
        ZAP_Full_Scan_Before,
        ZAP_API_Scan_Before,
      ]
    if: ${{ failure() }}
    concurrency:
      group: send-failure-notification-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history

      - name: Download Error Files
        uses: actions/download-artifact@v3
        with:
          name: error-files

      - name: Get Error Log and Commit Info
        id: error_info
        run: |
          # Get the author information from the latest commit
          COMMIT_AUTHOR_EMAIL=$(git log -1 --pretty=%ae)

          if [[ "$COMMIT_AUTHOR_EMAIL" == *"@users.noreply.github.com" ]]; then
            COMMIT_AUTHOR_EMAIL=$(git log -1 --pretty=%b | grep -oP '(?<=Signed-off-by: ).*(?= <)')
          fi

          changed_files=$(git diff --name-only HEAD~1 HEAD | tr '\n' ' ')

          error_paths=$(grep -o '/.*error' build_errors.log | sed 's/:.*//' | sort -u | tr '\n' ' ' | sed 's/ $//')
          echo "error_paths=$error_paths" >> $GITHUB_OUTPUT

          non_error_files=""
          for file in $changed_files; do
            if ! grep -q "$file" build_errors.log; then
              non_error_files+="$file "
            fi
          done

          echo "non_error_files=$non_error_files" >> $GITHUB_OUTPUT
          echo "commit_author_email=$COMMIT_AUTHOR_EMAIL" >> $GITHUB_OUTPUT

      - name: Send email on failure
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: "Build failure for ${{ github.repository }}"
          body: |
            Build failed for commit: ${{ github.sha }}

            Files with errors:
            ${{ steps.error_info.outputs.error_paths }}

            Files changed: ${{ steps.error_info.outputs.non_error_files }}

          to: ${{ steps.error_info.outputs.commit_author_email }}
          from: ${{ secrets.GMAIL_USERNAME }}
          attachments: build_errors.log

  send_success_notification:
    name: Send Success Notification
    runs-on: ubuntu-latest
    needs:
      [
        dependabot,
        lint,
        build,
        run-web-and-test,
        ZAP_Full_Scan_Before,
        ZAP_API_Scan_Before,
      ]
    if: ${{ success() }}
    concurrency:
      group: send-success-notification-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history

      - name: Get Commit Info
        id: commit_info
        run: |
          # Get the author information from the latest commit
          COMMIT_AUTHOR_EMAIL=$(git log -1 --format='%ae')

          if [[ "$COMMIT_AUTHOR_EMAIL" == *"@users.noreply.github.com" ]]; then
            COMMIT_AUTHOR_EMAIL=$(git log -1 --format='%b' | grep -oP '(?<=Signed-off-by: ).*(?= <)')
          fi

          changed_files=$(git diff --name-only HEAD~1 HEAD | tr '\n' ' ')
          echo "commit_author_email=$COMMIT_AUTHOR_EMAIL" >> $GITHUB_OUTPUT
          echo "changed_files=$changed_files" >> $GITHUB_OUTPUT

      - name: Send email on success
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: "Build success for ${{ github.repository }}"
          body: |
            Build succeeded for commit: ${{ github.sha }}

            Files changed: ${{ steps.commit_info.outputs.changed_files }}

          to: ${{ steps.commit_info.outputs.commit_author_email }}
          from: ${{ secrets.GMAIL_USERNAME }}
